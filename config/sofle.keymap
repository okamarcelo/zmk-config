/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/backlight.h>

#define MAIN 0
#define FUNC 1
#define MOVE 2
#define SET 3

#define RIGHT_KEYS 6 7 8 9 10 11 /**/ 18 19 20 21 22 23 /**/ 30 31 32 33 34 35 /**/ 43 44 45 46 47 48 49 /**/ 55 56 57 58 59
#define LEFT_KEYS 0 1 2 3 4 5 /**/ 12 13 14 15 16 17 /**/ 24 25 26 27 28 29 /**/ 36 37 38 39 40 41 42 /**/ 50 51 52 53 54
/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        set_layer {
            if-layers = <FUNC MOVE>;
            then-layer = <SET>;
        };
    };

    behaviors {
        hor_mouse: hor_mouse {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&mmv MOVE_LEFT>, <&mmv MOVE_RIGHT>;
        };
        ver_mouse: ver_mouse {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&mmv MOVE_DOWN>, <&mmv MOVE_UP>;
        };
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < RIGHT_KEYS >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < LEFT_KEYS >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            display-name = "main";
            bindings = <
&kp GRAVE &kp N1       &kp N2       &kp N3      &kp N4      &kp N5                        &kp N6   &kp N7             &kp N8      &kp N9       &kp N0          &kp BSPC
&kp TAB   &kp Q        &kp W        &kp E       &kp R       &kp T                         &kp Y    &kp U              &kp I       &kp O        &kp P           &kp BSLH
&kp F20   &hml LSHFT A &hml LCTRL S &hml LGUI D &hml LALT F &kp G                         &kp H    &hmr RALT J        &hmr RGUI K &hmr RCTRL L &hmr RSHFT SEMI &kp SQT
&none     &kp Z        &kp X        &kp C       &kp V       &kp B    &kp SPACE  &kp SPACE &kp N    &kp M              &kp COMMA   &kp DOT      &kp FSLH        &none   
                       &none        &none       &none       &mo FUNC &kp SPACE  &kp RET   &mo MOVE &kp K_CONTEXT_MENU &none       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        func_layer {
            display-name = "func";
            bindings = <
&kp ESC   &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                 &trans    &kp KP_NLCK &trans       &trans     &kp KP_DIVIDE   &trans    
&kp F11   &kp F6    &kp F7    &kp F8      &kp F9    &kp F10                &trans    &kp KP_N7   &kp KP_N8    &kp KP_N9  &kp KP_MULTIPLY &trans
&kp F12   &trans    &trans    &trans      &trans    &kp CLCK               &trans    &kp KP_N4   &kp KP_N5    &kp KP_N6  &kp KP_MINUS    &trans
&trans    &kp MINUS &kp EQUAL &kp LBKT    &kp RBKT  &trans  &trans  &trans &trans    &kp KP_N1   &kp KP_N2    &kp KP_N3  &kp KP_PLUS     &trans
                    &trans    &trans      &trans    &trans  &kp DEL &trans &trans    &kp KP_N0   &kp KP_COMMA &kp KP_DOT &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        move_layer {
            display-name = "move";
            bindings = <
&trans &trans &trans &trans &trans &trans               &trans    &trans     &trans           &trans     &trans   &trans
&trans &trans &trans &trans &trans &trans               &kp PG_UP &kp K_BACK &kp UP           &kp K_NEXT &kp HOME &trans
&trans &trans &trans &trans &trans &trans               &kp PG_DN &kp LEFT   &kp DOWN         &kp RIGHT  &kp END  &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans    &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT &trans   &trans
              &trans &trans &trans &trans &trans &trans &trans    &trans     &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        set_layer {
            display-name = "set";
            bindings = <
&none             &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none          &mkp MCLK      &none           &none &none
&ext_power EP_TOG &ext_power EP_ON &ext_power EP_OFF &none           &none           &none                                   &none &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &none &none
&bl BL_TOG        &bl BL_ON        &bl BL_OFF        &bl BL_INC      &bl BL_DEC      &none                                   &none &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none &none
&none             &none            &none             &none           &none           &none            &none       &bt BT_CLR &none &none &none &none &none &none
                                   &none             &none           &none           &none            &none       &none      &none &none &none &none
            >;

            sensor-bindings = <&hor_mouse &ver_mouse>;
        };
    };
};
